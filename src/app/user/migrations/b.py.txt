# Generated by Django 4.2.3 on 2023-07-24 15:20

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.contrib.auth.hashers import make_password
from django.db import migrations, models

import app.user.models


def create_superuser(apps, schema_editor):
    user_model = apps.get_model("user", "User")
    user_model.objects.create(
        email="admin@admin.com",
        password=make_password("admin123!!"),
        is_staff=True,
        is_superuser=True,
    )


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="생성일시")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="수정일시")),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                ("last_login", models.DateTimeField(blank=True, null=True, verbose_name="last login")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                ("date_joined", models.DateTimeField(default=django.utils.timezone.now, verbose_name="date joined")),
                ("email", models.EmailField(max_length=254, unique=True, verbose_name="이메일")),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=11,
                        validators=[
                            django.core.validators.validate_integer,
                            django.core.validators.MinLengthValidator(10),
                        ],
                        verbose_name="휴대폰",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "유저",
                "verbose_name_plural": "유저",
                "db_table": "user",
            },
            managers=[
                ("objects", app.user.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Social",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="생성일시")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="수정일시")),
                (
                    "kind",
                    models.CharField(
                        choices=[
                            ("kakao", "카카오"),
                            ("naver", "네이버"),
                            ("facebook", "페이스북"),
                            ("google", "구글"),
                            ("apple", "애플"),
                        ],
                        max_length=16,
                        verbose_name="타입",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
                ),
            ],
            options={
                "verbose_name": "소셜",
                "verbose_name_plural": "소셜",
            },
        ),
        migrations.RunPython(create_superuser),
    ]
