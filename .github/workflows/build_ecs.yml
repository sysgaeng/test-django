name: Build ECS
on:
  workflow_dispatch:
    inputs:
      env:
        description: Environment
        type: choice
        required: true
        options:
          - prod
          - dev
      celery:
        description: Celery
        type: boolean
        default: false
        required: false

jobs:
  set_environment:
    runs-on: ubuntu-latest
    outputs:
      project_name: ${{ steps.set_environment.outputs.project_name }}
      project_env: ${{ steps.set_environment.outputs.project_env }}
    steps:
      - id: set_environment
        name: Set Environment
        run: |
          echo "project_name=$(echo "${{ github.repository }}" | sed "s|${{ github.repository_owner }}\/||g" | sed "s|-django||g")" >> $GITHUB_OUTPUT

  create_repository:
    runs-on: ubuntu-latest
    needs: [ set_environment ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Create Repository
        continue-on-error: true
        run: |
          aws ecr create-repository --region ap-northeast-2 --repository-name ${{ needs.set_environment.outputs.project_name }}-backend

  deploy_backend_image:
    runs-on: ubuntu-latest
    needs: [ set_environment, create_repository ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build & Push Backend Image
        uses: docker/build-push-action@v2
        with:
          context: src
          push: true
          tags: >-
            ${{ steps.login-ecr.outputs.registry }}/${{ needs.set_environment.outputs.project_name }}-backend:${{ inputs.env }},
            ${{ steps.login-ecr.outputs.registry }}/${{ needs.set_environment.outputs.project_name }}-backend:${{ github.sha }}

  build_ecs:
    runs-on: ubuntu-latest
    needs: [ set_environment, deploy_backend_image ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Build ECS
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ needs.set_environment.outputs.project_name }}-${{ inputs.env }}-ecs
          template: .github/cloudformation/ecs.yml
          capabilities: CAPABILITY_NAMED_IAM
          parameter-overrides: >-
            ProjectName=${{ needs.set_environment.outputs.project_name }},
            ENV=${{ inputs.env }},
            Celery=${{ inputs.celery }}
